export const Moves: {[k: string]: ModdedMoveData} = {
	focusblast: {
		num: 411,
		accuracy: 85,
		basePower: 120,
		category: "Special",
		name: "Focus Blast",
		pp: 5,
		priority: 0,
		flags: {bullet: 1, protect: 1, mirror: 1},
		secondary: {
			chance: 10,
			boosts: {
				spd: -1,
			},
		},
		target: "normal",
		type: "Fighting",
		contestType: "Cool",
	},
	ruindesire: {
		num: -2,
		accuracy: 100,
		basePower: 140,
		category: "Special",
		name: "Ruin Desire",
		pp: 5,
		priority: 0,
		flags: {},
		isFutureMove: true,
		onTry(source, target) {
			if (!target.side.addSlotCondition(target, 'futuremove')) return false;
			Object.assign(target.side.slotConditions[target.position]['futuremove'], {
				move: 'ruindesire',
				source: source,
				moveData: {
					id: 'ruindesire',
					name: "Ruin Desire",
					accuracy: 100,
					basePower: 140,
					category: "Special",
					priority: 0,
					flags: {},
					effectType: 'Move',
					isFutureMove: true,
					type: 'Ghost',
				},
			});
			this.add('-start', source, 'Ruin Desire');
			return null;
		},
		secondary: null,
		target: "normal",
		type: "Ghost",
		contestType: "Beautiful",
	},
	fistglow: {
		num: -3,
		accuracy: true,
		basePower: 0,
		category: "Status",
		name: "Fist Glow",
		pp: 20,
		priority: 0,
		flags: {snatch: 1},
		boosts: {
			atk: 3,
		},
		secondary: null,
		target: "self",
		type: "Fighting",
		zMove: {effect: 'clearnegativeboost'},
		contestType: "Beautiful",
	},
	mechanize: {
		num: 465,
		accuracy: 85,
		basePower: 120,
		category: "Special",
		name: "Mechanize",
		pp: 5,
		priority: 0,
		flags: {protect: 1, mirror: 1},
		secondary: {
			chance: 40,
			boosts: {
				spd: -2,
			},
		},
		target: "normal",
		type: "Steel",
		contestType: "Beautiful",
	},
	lcreate: {
		num: 557,
		accuracy: 95,
		basePower: 180,
		category: "Physical",
		name: "L-create",
		pp: 5,
		priority: 0,
		flags: {contact: 1, protect: 1, mirror: 1},
		self: {
			boosts: {
				spe: -1,
				def: -1,
				spd: -1,
			},
		},
		secondary: null,
		target: "normal",
		type: "Poison",
		zMove: {basePower: 220},
		contestType: "Cool",
	},
	freezingshot: {
		num: 545,
		accuracy: 100,
		basePower: 100,
		category: "Special",
		name: "Freezing Shot",
		pp: 5,
		priority: 0,
		flags: {bullet: 1, protect: 1, mirror: 1},
		self: {
			sideCondition: 'mist',
		},
		secondary: null,
		target: "allAdjacent",
		type: "Ice",
		contestType: "Cool",
	},
	ultraspacefury: {
		num: 621,
		accuracy: true,
		basePower: 100,
		category: "Physical",
		isNonstandard: "Past",
		name: "Ultraspace Fury",
		pp: 5,
		priority: 0,
		flags: {mirror: 1, authentic: 1},
		breaksProtect: true,
		onTry(pokemon) {
			if (pokemon.species.name === 'Hoopa-Unbound') {
				return;
			}
			this.hint("Only a Pokemon whose form is Hoopa Unbound can use this move.");
			if (pokemon.species.name === 'Hoopa') {
				this.add('-fail', pokemon, 'move: Hyperspace Fury', '[forme]');
				return null;
			}
			this.add('-fail', pokemon, 'move: Hyperspace Fury');
			return null;
		},
		self: {
			boosts: {
				def: -1,
			},
		},
		secondary: null,
		target: "normal",
		type: "Dragon",
		contestType: "Tough",
	},
	ultraspacehole: {
		num: 593,
		accuracy: true,
		basePower: 80,
		category: "Special",
		isNonstandard: "Past",
		name: "Hyperspace Hole",
		pp: 5,
		priority: 0,
		flags: {mirror: 1, authentic: 1},
		breaksProtect: true,
		secondary: null,
		target: "normal",
		type: "Fairy",
		contestType: "Clever",
	},
	backpackthief: {
		num: 712,
		accuracy: 100,
		basePower: 90,
		category: "Physical",
		name: "Backpack Thief",
		pp: 10,
		priority: 0,
		flags: {contact: 1, protect: 1, mirror: 1, authentic: 1},
		stealsBoosts: true,
		// Boost stealing implemented in scripts.js
		secondary: null,
		target: "normal",
		type: "Normal",
		contestType: "Cool",
	},
	dracoblade: {
		num: 118,
		accuracy: 100,
		basePower: 50,
		category: "Status",
		name: "Draco Blade",
		pp: 10,
		priority: 0,
		flags: {contact: 1, protect: 1, mirror: 1},
		self: {
			onHit(target, source, effect) {
				this.useMove('shadowpiercenull', target);
			},
		},
		secondary: null,
		target: "normal",
		type: "Dragon",
		contestType: "Cute",
	},
	shadowpierce: {
		num: 118,
		accuracy: 100,
		basePower: 50,
		category: "Status",
		name: "Shadow Pierce",
		pp: 10,
		priority: 0,
		flags: {contact: 1, protect: 1, mirror: 1},
		self: {
			onHit(target, source, effect) {
				this.useMove('dracobladenull', target);
			},
		},
		secondary: null,
		target: "normal",
		type: "Ghost",
		contestType: "Cute",
	},
	dracobladenull: {
		num: 118,
		accuracy: 100,
		basePower: 50,
		category: "Status",
		name: "Draco Blade",
		pp: 10,
		priority: 0,
		flags: {contact: 1, protect: 1, mirror: 1},
		secondary: null,
		target: "normal",
		type: "Dragon",
		contestType: "Cute",
	},
	shadowpiercenull: {
		num: 118,
		accuracy: 100,
		basePower: 50,
		category: "Status",
		name: "Shadow Pierce",
		pp: 10,
		priority: 0,
		flags: {contact: 1, protect: 1, mirror: 1},
		secondary: null,
		target: "normal",
		type: "Ghost",
		contestType: "Cute",
	},
	heatclaws: {
		num: 202,
		accuracy: 100,
		basePower: 75,
		category: "Physical",
		name: "Heat Claws",
		pp: 10,
		priority: 0,
		flags: {protect: 1, mirror: 1, heal: 1, contact: 1},
		drain: [1, 2],
		secondary: null,
		target: "normal",
		type: "Fire",
		contestType: "Clever",
	},
	frozenleech: {
		num: 202,
		accuracy: 100,
		basePower: 75,
		category: "Physical",
		name: "Frozen Leech",
		pp: 10,
		priority: 0,
		flags: {protect: 1, mirror: 1, heal: 1, contact: 1},
		drain: [1, 2],
		secondary: null,
		target: "normal",
		type: "Ice",
		contestType: "Clever",
	},
};
